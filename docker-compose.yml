version: '2.12.2'

networks:
  main_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

services:
  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - /home/projects/Smart_Power_Meter/Software/Nginx/conf.d/:/etc/nginx/conf.d/:ro
      - /home/projects/Smart_Power_Meter/Software/showcase_webpage/:/usr/share/nginx/html/smartpowermeter.com.ge/
      - /home/data/certbot/www:/var/www/certbot/:ro
      - /home/data/certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      main_network:
        ipv4_address: 172.25.5.1
    depends_on:
      - certbot
  certbot:
    image: certbot/certbot:latest
    volumes:
      - /home/data/certbot/www/:/var/www/certbot/:rw
      - /home/data/certbot/conf/:/etc/letsencrypt/:rw
    networks:
      main_network:
        ipv4_address: 172.25.5.2
  web:
    build: /home/projects/Smart_Power_Meter/Software/SPM.Api/SPM.Api
    expose:
      - 80
      - 443
    networks:
      main_network:
        ipv4_address: 172.25.5.3
  db:
    user: root
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: "Y"
    env_file:
      - /home/data/mssql/mssql_envs.env
    # mssql server image isn't available for arm64 architecture, so we use azure-sql instead
    image: mcr.microsoft.com/azure-sql-edge:1.0.4
    # If you really want to use MS SQL Server, uncomment the following line
    #image: mcr.microsoft.com/mssql/server
    restart: always
    healthcheck:
        test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P example_123 -Q 'SELECT 1' || exit 1"]
        interval: 10s
        retries: 10
        start_period: 10s
        timeout: 3s
    volumes:
      - /home/data/mssql/log:/var/opt/mssql/log:rw
      - /home/data/mssql/secrets:/var/opt/mssql/secrets:rw
      - /home/data/mssql/data:/var/opt/mssql/data:rw
    networks:
      main_network:
        ipv4_address: 172.25.5.4
  second_site:
    build: /home/projects/Smart_Power_Meter/Software/second_site
    restart: always
    expose:
      - 4200
    networks:
      main_network:
        ipv4_address: 172.25.5.5
  influxdb:
    image: influxdb:2.6.1
    mem_limit: 1g
    mem_reservation: 512M
    cpus: 1
    expose:
      - 8086
    restart: always
    volumes:
      - /home/data/influxdb/data:/var/lib/influxdb2:rw
      - /home/data/influxdb/config:/etc/influxdb2:rw
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ORG: smartpowermeter-org
      DOCKER_INFLUXDB_INIT_BUCKET: test_1
    env_file:
      - /home/data/influxdb/influxdb_envs.env
    networks:
      main_network:
        ipv4_address: 172.25.5.6
  mqtt_broker:
    build: /home/projects/Smart_Power_Meter/Software/SPM_MQTT
    ports:
      - 707:707
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5
    networks:
      main_network:
        ipv4_address: 172.25.5.7


  # jenkins:
  #   image: jenkins/jenkins:2.387.1-lts
  #   container_name: jenkins
  #   mem_limit: 1g
  #   mem_reservation: 128M
  #   cpus: 0.25
  #   restart: always
  #   user: root
  #   privileged: true
  #   networks:
  #     main_network:
  #       ipv4_address: 172.25.5.8
  #   environment:
  #     DOCKER_TLS_CERTDIR: /certs
  #   volumes:
  #     - /home/data/jenkins/client:/certs/client
  #     - /home/data/jenkins/home:/var/jenkins_home
  #   expose:
  #     - 8080
  # agent:
  #   build:
  #     context: /home/data/jenkins
  #     dockerfile: Jenkins_Agent_Dockerfile
  #   user: root
  #   restart: always
  #   privileged: true
  #   container_name: agent
  #   networks:
  #     main_network:
  #       ipv4_address: 172.25.5.9
  #   expose:
  #     - 22
  #   env_file:
  #     - /home/data/jenkins/ssh/pub_key.env


  mongodb:
    image: mongo:5.0.13
    volumes:
      - mongo_data:/data/db
  elasticsearch:
    user: root
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
  graylog:
    user: root
    image: graylog/graylog:5.0
    volumes:
      - graylog_data:/usr/share/graylog/data
    environment:
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=https://161.35.207.10:9000/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    links:
      - mongodb:mongo
      - elasticsearch
    restart: always
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      - 9000:9000
      - 1514:1514
      - 1514:1514/udp
      - 12201:12201
      - 12201:12201/udp

  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: mailserver
    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
    hostname: mail.smartpowermeter.ge
    ports:
      - "25:25"
      - "143:143"
      - "465:465"
      - "587:587"
      - "993:993"
    volumes:
      - /home/data/dms/mail-data/:/var/mail/
      - /home/data/dms/mail-state/:/var/mail-state/
      - /home/data/dms/mail-logs/:/var/log/mail/
      - /home/data/dms/config/:/tmp/docker-mailserver/
      - /home/data/certbot/conf/:/etc/letsencrypt/:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_RSPAMD=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - SSL_TYPE=letsencrypt
    cap_add:
      - NET_ADMIN # For Fail2Ban to work
    restart: always

volumes:
  mongo_data:
    driver: local
  es_data:
    driver: local
  graylog_data:
    driver: local