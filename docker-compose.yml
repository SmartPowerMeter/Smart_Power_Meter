version: '2.16.0'

networks:
  main_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

services:
  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - /home/projects/Smart_Power_Meter/Software/Nginx/conf.d/:/etc/nginx/conf.d/:ro
      - /home/projects/Smart_Power_Meter/Software/showcase_webpage/:/usr/share/nginx/html/smartpowermeter.com.ge/
      - /home/data/certbot/www:/var/www/certbot/:ro
      - /home/data/certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      main_network:
        ipv4_address: 172.25.5.1
    depends_on:
      - certbot
  certbot:
    image: certbot/certbot:latest
    volumes:
      - /home/data/certbot/www/:/var/www/certbot/:rw
      - /home/data/certbot/conf/:/etc/letsencrypt/:rw
    networks:
      main_network:
        ipv4_address: 172.25.5.2
  web:
    build: /home/projects/Smart_Power_Meter/Software/SPM.Api/SPM.Api
    expose:
      - 80
      - 443
    networks:
      main_network:
        ipv4_address: 172.25.5.3
  db:
    user: root
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: "Y"
    env_file:
      - /home/data/mssql/mssql_envs.env
    # mssql server image isn't available for arm64 architecture, so we use azure-sql instead
    image: mcr.microsoft.com/azure-sql-edge:1.0.4
    # If you really want to use MS SQL Server, uncomment the following line
    #image: mcr.microsoft.com/mssql/server
    restart: always
    healthcheck:
        test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P example_123 -Q 'SELECT 1' || exit 1"]
        interval: 10s
        retries: 10
        start_period: 10s
        timeout: 3s
    volumes:
      - /home/data/mssql/log:/var/opt/mssql/log:rw
      - /home/data/mssql/secrets:/var/opt/mssql/secrets:rw
      - /home/data/mssql/data:/var/opt/mssql/data:rw
    networks:
      main_network:
        ipv4_address: 172.25.5.4
  second_site:
    build: /home/projects/Smart_Power_Meter/Software/second_site
    expose:
      - 4200
    networks:
      main_network:
        ipv4_address: 172.25.5.5
  influxdb:
    image: influxdb:2.6.1
    expose:
      - 8086
    restart: always
    volumes:
      - /home/data/influxdb/data:/var/lib/influxdb2:rw
      - /home/data/influxdb/config:/etc/influxdb2:rw
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ORG: smartpowermeter-org
      DOCKER_INFLUXDB_INIT_BUCKET: test_1
    env_file:
      - /home/data/influxdb/influxdb_envs.env
    networks:
      main_network:
        ipv4_address: 172.25.5.6
  mqtt_broker:
    build: /home/projects/Smart_Power_Meter/Software/SPM_MQTT
    ports:
      - 707:707
    networks:
      main_network:
        ipv4_address: 172.25.5.7


  # jenkins:
  #   image: jenkins/jenkins:2.387.1-lts
  #   container_name: jenkins
  #   restart: always
  #   user: root
  #   privileged: true
  #   networks:
  #     main_network:
  #       ipv4_address: 172.25.5.8
  #   environment:
  #     DOCKER_TLS_CERTDIR: /certs
  #   volumes:
  #     - /home/data/jenkins/client:/certs/client
  #     - /home/data/jenkins/home:/var/jenkins_home
  #   expose:
  #     - 8080
  # agent:
  #   build:
  #     context: /home/data/jenkins
  #     dockerfile: Jenkins_Agent_Dockerfile
  #   user: root
  #   restart: always
  #   privileged: true
  #   container_name: agent
  #   networks:
  #     main_network:
  #       ipv4_address: 172.25.5.9
  #   expose:
  #     - 22
  #   env_file:
  #     - /home/data/jenkins/ssh/pub_key.env